name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  check-version:
    name: Check if version changed
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check version change
        id: check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PREVIOUS_VERSION=$(git show HEAD^:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf-8')).version")

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "✅ Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "⏭️ Version unchanged, skipping release"
          fi

  release:
    name: Build and Release
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run tsc

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build widget
        run: npm run build

      - name: Create git tags
        run: npm run release

      - name: Read CHANGELOG
        id: changelog
        run: |
          VERSION="${{ needs.check-version.outputs.version }}"

          # Extract changelog for current version
          CHANGELOG=$(awk '/^## / { if (p) { exit }; if ($2 == "'$VERSION'") { p=1; next } } p && NF' CHANGELOG.md || echo "No changelog entry found for version $VERSION")

          # Use heredoc to preserve newlines properly
          {
            echo "content<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          name: Release v${{ needs.check-version.outputs.version }}
          body: |
            ## Changes

            ${{ steps.changelog.outputs.content }}

            ---

            ### Installation

            Download the `code.js` and `manifest.json` files below and install the widget in Figma:

            1. Open Figma desktop app
            2. Go to **Menu > Widgets > Development > Import widget from manifest**
            3. Select the downloaded `manifest.json` file

            For more details, see [CONTRIBUTING.md](https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md#publishing-releases).
          files: |
            dist/code.js
            manifest.json
          draft: false
          prerelease: false
